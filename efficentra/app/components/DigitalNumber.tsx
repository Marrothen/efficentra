interface DigitalNumberProps {
  value: string;
  size?: 'small' | 'medium' | 'large';
}

const DigitalNumber: React.FC<DigitalNumberProps> = ({ value, size = 'medium' }) => {  const getPixelSize = () => {
    switch(size) {
      case 'small': return { width: '10px', height: '10px', margin: '1px' };
      case 'large': return { width: '20px', height: '20px', margin: '1px' };
      default: return { width: '15px', height: '15px', margin: '1px' };
    }
  }

  const pixelSize = getPixelSize();
  
  const getPixelStyle = (on: boolean) => ({
    width: pixelSize.width,
    height: pixelSize.height,
    backgroundColor: on ? 'white' : 'transparent',
    margin: pixelSize.margin,
    boxShadow: on ? '0 0 3px rgba(255, 255, 255, 0.5)' : 'none',
  });const getDigit = (digit: string): boolean[][] => {
    const patterns: { [key: string]: boolean[][] } = {
      '0': [
        [false, true, true, true, false],
        [true, false, false, false, true],
        [true, false, false, false, true],
        [true, false, false, false, true],
        [true, false, false, false, true],
        [true, false, false, false, true],
        [false, true, true, true, false],
      ],
      '1': [
        [false, false, true, false, false],
        [false, true, true, false, false],
        [false, false, true, false, false],
        [false, false, true, false, false],
        [false, false, true, false, false],
        [false, false, true, false, false],
        [false, true, true, true, false],
      ],      '2': [
        [false, true, true, true, false],
        [true, false, false, false, true],
        [false, false, false, false, true],
        [false, false, false, true, false],
        [false, false, true, false, false],
        [false, true, false, false, false],
        [true, true, true, true, true],
      ],
      '3': [
        [false, true, true, true, false],
        [true, false, false, false, true],
        [false, false, false, false, true],
        [false, false, true, true, false],
        [false, false, false, false, true],
        [true, false, false, false, true],
        [false, true, true, true, false],
      ],
      '4': [
        [false, false, false, true, false],
        [false, false, true, true, false],
        [false, true, false, true, false],
        [true, false, false, true, false],
        [true, true, true, true, true],
        [false, false, false, true, false],
        [false, false, false, true, false],
      ],      '5': [
        [true, true, true, true, true],
        [true, false, false, false, false],
        [true, false, false, false, false],
        [true, true, true, true, false],
        [false, false, false, false, true],
        [true, false, false, false, true],
        [false, true, true, true, false],
      ],
      '6': [
        [false, true, true, true, false],
        [true, false, false, false, false],
        [true, false, false, false, false],
        [true, true, true, true, false],
        [true, false, false, false, true],
        [true, false, false, false, true],
        [false, true, true, true, false],
      ],
      '7': [
        [true, true, true, true, true],
        [false, false, false, false, true],
        [false, false, false, true, false],
        [false, false, true, false, false],
        [false, true, false, false, false],
        [false, true, false, false, false],
        [false, true, false, false, false],
      ],      '8': [
        [false, true, true, true, false],
        [true, false, false, false, true],
        [true, false, false, false, true],
        [false, true, true, true, false],
        [true, false, false, false, true],
        [true, false, false, false, true],
        [false, true, true, true, false],
      ],
      '9': [
        [false, true, true, true, false],
        [true, false, false, false, true],
        [true, false, false, false, true],
        [false, true, true, true, true],
        [false, false, false, false, true],
        [true, false, false, false, true],
        [false, true, true, true, false],
      ],      ':': [
        [false, false, false, false, false],
        [false, false, false, false, false],
        [false, false, true, false, false],
        [false, false, false, false, false],
        [false, false, false, false, false],
        [false, false, true, false, false],
        [false, false, false, false, false],
      ],
      '?': [
        [false, true, true, true, false],
        [true, false, false, false, true],
        [false, false, false, false, true],
        [false, false, false, true, false],
        [false, false, true, false, false],
        [false, false, false, false, false],
        [false, false, true, false, false],
      ],
      ' ': [
        [false, false, false, false, false],
        [false, false, false, false, false],
        [false, false, false, false, false],
        [false, false, false, false, false],
        [false, false, false, false, false],
        [false, false, false, false, false],
        [false, false, false, false, false],
      ],      'a': [
        [false, false, false, false, false],
        [false, false, false, false, false],
        [false, true, true, true, false],
        [false, false, false, false, true],
        [false, true, true, true, true],
        [true, false, false, false, true],
        [false, true, true, true, true],
      ],
      'A': [
        [false, false, true, false, false],
        [false, true, false, true, false],
        [true, false, false, false, true],
        [true, false, false, false, true],
        [true, true, true, true, true],
        [true, false, false, false, true],
        [true, false, false, false, true],
      ],
      'b': [
        [true, false, false, false, false],
        [true, false, false, false, false],
        [true, false, true, true, false],
        [true, true, false, false, true],
        [true, false, false, false, true],
        [true, false, false, false, true],
        [true, true, true, true, false],
      ],
      'B': [
        [true, true, true, true, false],
        [true, false, false, false, true],
        [true, false, false, false, true],
        [true, true, true, true, false],
        [true, false, false, false, true],
        [true, false, false, false, true],
        [true, true, true, true, false],
      ],      'c': [
        [false, false, false, false, false],
        [false, false, false, false, false],
        [false, true, true, true, false],
        [true, false, false, false, false],
        [true, false, false, false, false],
        [true, false, false, false, false],
        [false, true, true, true, false],
      ],
      'C': [
        [false, true, true, true, false],
        [true, false, false, false, true],
        [true, false, false, false, false],
        [true, false, false, false, false],
        [true, false, false, false, false],
        [true, false, false, false, true],
        [false, true, true, true, false],
      ],
      'd': [
        [false, false, false, false, true],
        [false, false, false, false, true],
        [false, true, true, true, true],
        [true, false, false, false, true],
        [true, false, false, false, true],
        [true, false, false, false, true],
        [false, true, true, true, true],
      ],
      'D': [
        [true, true, true, true, false],
        [true, false, false, false, true],
        [true, false, false, false, true],
        [true, false, false, false, true],
        [true, false, false, false, true],
        [true, false, false, false, true],
        [true, true, true, true, false],
      ],      'e': [
        [false, false, false, false, false],
        [false, false, false, false, false],
        [false, true, true, true, false],
        [true, false, false, false, true],
        [true, true, true, true, true],
        [true, false, false, false, false],
        [false, true, true, true, false],
      ],
      'E': [
        [true, true, true, true, true],
        [true, false, false, false, false],
        [true, false, false, false, false],
        [true, true, true, true, false],
        [true, false, false, false, false],
        [true, false, false, false, false],
        [true, true, true, true, true],
      ],
      'f': [
        [true, true, true],
        [true, false, false],
        [true, true, false],
        [true, false, false],
        [true, false, false],
      ],
      'F': [
        [true, true, true],
        [true, false, false],
        [true, true, false],
        [true, false, false],
        [true, false, false],
      ],
      'g': [
        [true, true, true],
        [true, false, false],
        [true, false, true],
        [true, false, true],
        [true, true, true],
      ],
      'G': [
        [true, true, true],
        [true, false, false],
        [true, false, true],
        [true, false, true],
        [true, true, true],
      ],
      'h': [
        [true, false, true],
        [true, false, true],
        [true, true, true],
        [true, false, true],
        [true, false, true],
      ],
      'H': [
        [true, false, true],
        [true, false, true],
        [true, true, true],
        [true, false, true],
        [true, false, true],
      ],      'i': [
        [false, false, false, false, false],
        [false, false, true, false, false],
        [false, false, false, false, false],
        [false, false, true, false, false],
        [false, false, true, false, false],
        [false, false, true, false, false],
        [false, false, true, false, false],
      ],
      'I': [
        [false, true, true, true, false],
        [false, false, true, false, false],
        [false, false, true, false, false],
        [false, false, true, false, false],
        [false, false, true, false, false],
        [false, false, true, false, false],
        [false, true, true, true, false],
      ],
      'j': [
        [false, false, true],
        [false, false, true],
        [false, false, true],
        [true, false, true],
        [true, true, true],
      ],
      'J': [
        [false, false, true],
        [false, false, true],
        [false, false, true],
        [true, false, true],
        [true, true, true],
      ],
      'k': [
        [true, false, true],
        [true, false, true],
        [true, true, false],
        [true, false, true],
        [true, false, true],
      ],
      'K': [
        [true, false, true],
        [true, false, true],
        [true, true, false],
        [true, false, true],
        [true, false, true],
      ],
      'l': [
        [true, false, false],
        [true, false, false],
        [true, false, false],
        [true, false, false],
        [true, true, true],
      ],
      'L': [
        [true, false, false],
        [true, false, false],
        [true, false, false],
        [true, false, false],
        [true, true, true],
      ],      'm': [
        [false, false, false, false, false],
        [false, false, false, false, false],
        [true, true, false, true, false],
        [true, false, true, false, true],
        [true, false, true, false, true],
        [true, false, true, false, true],
        [true, false, true, false, true],
      ],
      'M': [
        [true, false, false, false, true],
        [true, true, false, true, true],
        [true, false, true, false, true],
        [true, false, true, false, true],
        [true, false, false, false, true],
        [true, false, false, false, true],
        [true, false, false, false, true],
      ],
      'n': [
        [false, false, false, false, false],
        [false, false, false, false, false],
        [true, false, true, true, false],
        [true, true, false, false, true],
        [true, false, false, false, true],
        [true, false, false, false, true],
        [true, false, false, false, true],
      ],
      'N': [
        [true, false, false, false, true],
        [true, true, false, false, true],
        [true, false, true, false, true],
        [true, false, true, false, true],
        [true, false, false, true, true],
        [true, false, false, false, true],
        [true, false, false, false, true],
      ],
      'o': [
        [false, false, false, false, false],
        [false, false, false, false, false],
        [false, true, true, true, false],
        [true, false, false, false, true],
        [true, false, false, false, true],
        [true, false, false, false, true],
        [false, true, true, true, false],
      ],
      'O': [
        [false, true, true, true, false],
        [true, false, false, false, true],
        [true, false, false, false, true],
        [true, false, false, false, true],
        [true, false, false, false, true],
        [true, false, false, false, true],
        [false, true, true, true, false],
      ],      'p': [
        [false, false, false, false, false],
        [false, false, false, false, false],
        [true, true, true, true, false],
        [true, false, false, false, true],
        [true, true, true, true, false],
        [true, false, false, false, false],
        [true, false, false, false, false],
      ],
      'P': [
        [true, true, true, true, false],
        [true, false, false, false, true],
        [true, false, false, false, true],
        [true, true, true, true, false],
        [true, false, false, false, false],
        [true, false, false, false, false],
        [true, false, false, false, false],
      ],
      'q': [
        [false, false, false, false, false],
        [false, false, false, false, false],
        [false, true, true, true, true],
        [true, false, false, false, true],
        [false, true, true, true, true],
        [false, false, false, false, true],
        [false, false, false, false, true],
      ],
      'Q': [
        [false, true, true, true, false],
        [true, false, false, false, true],
        [true, false, false, false, true],
        [true, false, false, false, true],
        [true, false, true, false, true],
        [true, false, false, true, false],
        [false, true, true, false, true],
      ],      'r': [
        [false, false, false, false, false],
        [false, false, false, false, false],
        [true, false, true, true, false],
        [true, true, false, false, true],
        [true, false, false, false, false],
        [true, false, false, false, false],
        [true, false, false, false, false],
      ],
      'R': [
        [true, true, true, true, false],
        [true, false, false, false, true],
        [true, false, false, false, true],
        [true, true, true, true, false],
        [true, false, true, false, false],
        [true, false, false, true, false],
        [true, false, false, false, true],
      ],
      's': [
        [false, false, false, false, false],
        [false, false, false, false, false],
        [false, true, true, true, false],
        [true, false, false, false, false],
        [false, true, true, true, false],
        [false, false, false, false, true],
        [true, true, true, true, false],
      ],
      'S': [
        [false, true, true, true, false],
        [true, false, false, false, true],
        [true, false, false, false, false],
        [false, true, true, true, false],
        [false, false, false, false, true],
        [true, false, false, false, true],
        [false, true, true, true, false],
      ],
      't': [
        [false, false, true, false, false],
        [false, false, true, false, false],
        [true, true, true, true, true],
        [false, false, true, false, false],
        [false, false, true, false, false],
        [false, false, true, false, false],
        [false, false, true, true, false],
      ],
      'T': [
        [true, true, true, true, true],
        [false, false, true, false, false],
        [false, false, true, false, false],
        [false, false, true, false, false],
        [false, false, true, false, false],
        [false, false, true, false, false],
        [false, false, true, false, false],
      ],      'u': [
        [false, false, false, false, false],
        [false, false, false, false, false],
        [true, false, false, false, true],
        [true, false, false, false, true],
        [true, false, false, false, true],
        [true, false, false, false, true],
        [false, true, true, true, true],
      ],
      'U': [
        [true, false, false, false, true],
        [true, false, false, false, true],
        [true, false, false, false, true],
        [true, false, false, false, true],
        [true, false, false, false, true],
        [true, false, false, false, true],
        [false, true, true, true, false],
      ],
      'v': [
        [false, false, false, false, false],
        [false, false, false, false, false],
        [true, false, false, false, true],
        [true, false, false, false, true],
        [true, false, false, false, true],
        [false, true, false, true, false],
        [false, false, true, false, false],
      ],
      'V': [
        [true, false, false, false, true],
        [true, false, false, false, true],
        [true, false, false, false, true],
        [true, false, false, false, true],
        [false, true, false, true, false],
        [false, true, false, true, false],
        [false, false, true, false, false],
      ],      'w': [
        [false, false, false, false, false],
        [false, false, false, false, false],
        [true, false, false, false, true],
        [true, false, false, false, true],
        [true, false, true, false, true],
        [true, true, false, true, true],
        [true, false, false, false, true],
      ],
      'W': [
        [true, false, false, false, true],
        [true, false, true],
        [true, true, true],
        [true, true, true],
        [true, false, true],
      ],
      'x': [
        [true, false, true],
        [true, false, true],
        [false, true, false],
        [true, false, true],
        [true, false, true],
      ],
      'X': [
        [true, false, true],
        [true, false, true],
        [false, true, false],
        [true, false, true],
        [true, false, true],
      ],
      'y': [
        [true, false, true],
        [true, false, true],
        [true, true, true],
        [false, true, false],
        [false, true, false],
      ],
      'Y': [
        [true, false, true],
        [true, false, true],
        [false, true, false],
        [false, true, false],
        [false, true, false],
      ],
      'z': [
        [true, true, true],
        [false, false, true],
        [false, true, false],
        [true, false, false],
        [true, true, true],
      ],
      'Z': [
        [true, true, true],
        [false, false, true],
        [false, true, false],
        [true, false, false],
        [true, true, true],
      ],
    };

    return patterns[digit] || patterns[' '];  };  return (
    <div className="inline-flex gap-2 mx-1">
      {value.split('').map((digit, i) => (
        <div key={i} className="flex flex-col" style={{ gap: size === 'large' ? '2px' : '1px' }}>
          {getDigit(digit).map((row, rowIndex) => (
            <div key={rowIndex} className="flex" style={{ gap: size === 'large' ? '2px' : '1px' }}>
              {row.map((isOn, colIndex) => (
                <div key={colIndex} style={getPixelStyle(isOn)} />
              ))}
            </div>
          ))}
        </div>
      ))}
    </div>
  );
};

export default DigitalNumber;
